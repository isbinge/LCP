name: Test Server Deploy
on:
  push:
    branches:
      - develop
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CI: true
      SHOW_BUILD_INFO: true
      TZ: Asia/Shanghai
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.16.1
        uses: actions/setup-node@v1
        with:
          node-version: 12.16.1
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies using yarn
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn --frozen-lockfile --registry=https://registry.yarnpkg.com --prefer-offline --no-progress
      - name: Lint TS & SCSS files
        run: yarn lint:ci
      - name: Run tests
        run: yarn test --collectCoverage
      - name: Uploading coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: ./coverage/clover.xml # optional
          # flags: unit-tests # optional
          # name: codecov-umbrella # optional
          # fail_ci_if_error: true # optional (default = false)
      - name: Build production package
        run: yarn build:prod
      - name: Deploy to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.TEST_SERVER_HOST }}
          username: ${{ secrets.TEST_SERVER_USERNAME }}
          password: ${{ secrets.TEST_SERVER_PASSWORD }}
          source: dist/
          target: ${{ secrets.TEST_SERVER_TARGET }}
